{"custom_id": "cq-0", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "\nYou are an expert in knowledge graphs and SPARQL query generation. Your task is to generate SPARQL queries based on provided competency questions and a given schema.\n\nGuidelines:\nUse the schema provided in the context block to determine appropriate classes, properties, and relationships.\n - Ensure queries follow SPARQL syntax and use prefixes correctly.\n - Generate queries that efficiently retrieve relevant data while optimizing performance.\n - If multiple valid queries exist, choose the most concise and efficient one.\n - Preserve the intent of the competency question while ensuring syntactic correctness.\n - Give only the SPARQL query and nothing else.\n - Only use RDF, RDFS, XSD, OWL, TIME for generic properties unless a specific namespace is provided. Dont't use external ones unless specified.\n"}, {"role": "user", "content": "\nTask:\nWrite a SPARQL query that answers the following competency question:\nWhat are all the enslaved people in County X in the century X?\n\nRequirements:\n- Use the schema to determine correct URIs and relationships.\n- Ensure the query retrieves the necessary information efficiently.\n- Provide the full SPARQL query without placeholders.\n\nContext:\nBelow is the schema of a knowledge graph:\nSubject,Predicate,Object\nwb:Item (Agent),hasName,xsd:string\nhasName,recordedAt,wd:Item (Event)\nhasName,nameStructure,wd:Item (NameStructure)\nhasName,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasSex,wd:Item (SexType)\nhasSex,recordedAt,wd:Item (Event)\nhasSex,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasOccupation,wd:Item (Occupation)\nhasOccupation,recordedAt,wd:Item (Event)\nhasOccupation,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasAgeCategory,wb:Item (AgeCategory)\nhasAgeCategory,hasAge,xsd:int\nhasAgeCategory,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasAge,xsd:int\nhasAge,hasAgeCategory,wb:Item (AgeCategory)\nhasAge,isDirectlyBasedOn,Reference\nwb:Item (Agent),participatesIn,wd:Item (Event)\nparticipatesIn,recordedAt,wd:Item (Event)\nparticipatesIn,hasTemporalExtent,wd:Item (TemporalExtent)\nparticipatesIn,isDirectlyBasedOn,Reference\nparticipatesIn,hasParticipationRoleType,wd:Item (ParticipationRoleCV)\nwb:Item (Agent),hasInterAgentRelationship,wd:Item (Agent)\nhasInterAgentRelationship,recordedAt,wd:Item (Event)\nhasInterAgentRelationship,isDirectlyBasedOn,Reference\nhasInterAgentRelationship,hasInterAgentRelationshipType,wd:Item (InterAgentRelationshipCV)\n\n"}], "temperature": 0.8}}
{"custom_id": "cq-1", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "\nYou are an expert in knowledge graphs and SPARQL query generation. Your task is to generate SPARQL queries based on provided competency questions and a given schema.\n\nGuidelines:\nUse the schema provided in the context block to determine appropriate classes, properties, and relationships.\n - Ensure queries follow SPARQL syntax and use prefixes correctly.\n - Generate queries that efficiently retrieve relevant data while optimizing performance.\n - If multiple valid queries exist, choose the most concise and efficient one.\n - Preserve the intent of the competency question while ensuring syntactic correctness.\n - Give only the SPARQL query and nothing else.\n - Only use RDF, RDFS, XSD, OWL, TIME for generic properties unless a specific namespace is provided. Dont't use external ones unless specified.\n"}, {"role": "user", "content": "\nTask:\nWrite a SPARQL query that answers the following competency question:\nWhat are all the enslaved individuals categorized by gender, ethnicity, and location (e.g., on plantation X or of XXXX ethnicity)?\n\nRequirements:\n- Use the schema to determine correct URIs and relationships.\n- Ensure the query retrieves the necessary information efficiently.\n- Provide the full SPARQL query without placeholders.\n\nContext:\nBelow is the schema of a knowledge graph:\nSubject,Predicate,Object\nwb:Item (Agent),hasName,xsd:string\nhasName,recordedAt,wd:Item (Event)\nhasName,nameStructure,wd:Item (NameStructure)\nhasName,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasSex,wd:Item (SexType)\nhasSex,recordedAt,wd:Item (Event)\nhasSex,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasOccupation,wd:Item (Occupation)\nhasOccupation,recordedAt,wd:Item (Event)\nhasOccupation,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasAgeCategory,wb:Item (AgeCategory)\nhasAgeCategory,hasAge,xsd:int\nhasAgeCategory,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasAge,xsd:int\nhasAge,hasAgeCategory,wb:Item (AgeCategory)\nhasAge,isDirectlyBasedOn,Reference\nwb:Item (Agent),participatesIn,wd:Item (Event)\nparticipatesIn,recordedAt,wd:Item (Event)\nparticipatesIn,hasTemporalExtent,wd:Item (TemporalExtent)\nparticipatesIn,isDirectlyBasedOn,Reference\nparticipatesIn,hasParticipationRoleType,wd:Item (ParticipationRoleCV)\nwb:Item (Agent),hasInterAgentRelationship,wd:Item (Agent)\nhasInterAgentRelationship,recordedAt,wd:Item (Event)\nhasInterAgentRelationship,isDirectlyBasedOn,Reference\nhasInterAgentRelationship,hasInterAgentRelationshipType,wd:Item (InterAgentRelationshipCV)\n\n"}], "temperature": 0.8}}
{"custom_id": "cq-2", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "\nYou are an expert in knowledge graphs and SPARQL query generation. Your task is to generate SPARQL queries based on provided competency questions and a given schema.\n\nGuidelines:\nUse the schema provided in the context block to determine appropriate classes, properties, and relationships.\n - Ensure queries follow SPARQL syntax and use prefixes correctly.\n - Generate queries that efficiently retrieve relevant data while optimizing performance.\n - If multiple valid queries exist, choose the most concise and efficient one.\n - Preserve the intent of the competency question while ensuring syntactic correctness.\n - Give only the SPARQL query and nothing else.\n - Only use RDF, RDFS, XSD, OWL, TIME for generic properties unless a specific namespace is provided. Dont't use external ones unless specified.\n"}, {"role": "user", "content": "\nTask:\nWrite a SPARQL query that answers the following competency question:\nWhat are all the available population counts of enslaved people by place and year?\n\nRequirements:\n- Use the schema to determine correct URIs and relationships.\n- Ensure the query retrieves the necessary information efficiently.\n- Provide the full SPARQL query without placeholders.\n\nContext:\nBelow is the schema of a knowledge graph:\nSubject,Predicate,Object\nwb:Item (Agent),hasName,xsd:string\nhasName,recordedAt,wd:Item (Event)\nhasName,nameStructure,wd:Item (NameStructure)\nhasName,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasSex,wd:Item (SexType)\nhasSex,recordedAt,wd:Item (Event)\nhasSex,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasOccupation,wd:Item (Occupation)\nhasOccupation,recordedAt,wd:Item (Event)\nhasOccupation,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasAgeCategory,wb:Item (AgeCategory)\nhasAgeCategory,hasAge,xsd:int\nhasAgeCategory,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasAge,xsd:int\nhasAge,hasAgeCategory,wb:Item (AgeCategory)\nhasAge,isDirectlyBasedOn,Reference\nwb:Item (Agent),participatesIn,wd:Item (Event)\nparticipatesIn,recordedAt,wd:Item (Event)\nparticipatesIn,hasTemporalExtent,wd:Item (TemporalExtent)\nparticipatesIn,isDirectlyBasedOn,Reference\nparticipatesIn,hasParticipationRoleType,wd:Item (ParticipationRoleCV)\nwb:Item (Agent),hasInterAgentRelationship,wd:Item (Agent)\nhasInterAgentRelationship,recordedAt,wd:Item (Event)\nhasInterAgentRelationship,isDirectlyBasedOn,Reference\nhasInterAgentRelationship,hasInterAgentRelationshipType,wd:Item (InterAgentRelationshipCV)\n\n"}], "temperature": 0.8}}
{"custom_id": "cq-3", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "\nYou are an expert in knowledge graphs and SPARQL query generation. Your task is to generate SPARQL queries based on provided competency questions and a given schema.\n\nGuidelines:\nUse the schema provided in the context block to determine appropriate classes, properties, and relationships.\n - Ensure queries follow SPARQL syntax and use prefixes correctly.\n - Generate queries that efficiently retrieve relevant data while optimizing performance.\n - If multiple valid queries exist, choose the most concise and efficient one.\n - Preserve the intent of the competency question while ensuring syntactic correctness.\n - Give only the SPARQL query and nothing else.\n - Only use RDF, RDFS, XSD, OWL, TIME for generic properties unless a specific namespace is provided. Dont't use external ones unless specified.\n"}, {"role": "user", "content": "\nTask:\nWrite a SPARQL query that answers the following competency question:\nWhat are all the documented literacy statuses of enslaved individuals?\n\nRequirements:\n- Use the schema to determine correct URIs and relationships.\n- Ensure the query retrieves the necessary information efficiently.\n- Provide the full SPARQL query without placeholders.\n\nContext:\nBelow is the schema of a knowledge graph:\nSubject,Predicate,Object\nwb:Item (Agent),hasName,xsd:string\nhasName,recordedAt,wd:Item (Event)\nhasName,nameStructure,wd:Item (NameStructure)\nhasName,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasSex,wd:Item (SexType)\nhasSex,recordedAt,wd:Item (Event)\nhasSex,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasOccupation,wd:Item (Occupation)\nhasOccupation,recordedAt,wd:Item (Event)\nhasOccupation,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasAgeCategory,wb:Item (AgeCategory)\nhasAgeCategory,hasAge,xsd:int\nhasAgeCategory,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasAge,xsd:int\nhasAge,hasAgeCategory,wb:Item (AgeCategory)\nhasAge,isDirectlyBasedOn,Reference\nwb:Item (Agent),participatesIn,wd:Item (Event)\nparticipatesIn,recordedAt,wd:Item (Event)\nparticipatesIn,hasTemporalExtent,wd:Item (TemporalExtent)\nparticipatesIn,isDirectlyBasedOn,Reference\nparticipatesIn,hasParticipationRoleType,wd:Item (ParticipationRoleCV)\nwb:Item (Agent),hasInterAgentRelationship,wd:Item (Agent)\nhasInterAgentRelationship,recordedAt,wd:Item (Event)\nhasInterAgentRelationship,isDirectlyBasedOn,Reference\nhasInterAgentRelationship,hasInterAgentRelationshipType,wd:Item (InterAgentRelationshipCV)\n\n"}], "temperature": 0.8}}
{"custom_id": "cq-4", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "\nYou are an expert in knowledge graphs and SPARQL query generation. Your task is to generate SPARQL queries based on provided competency questions and a given schema.\n\nGuidelines:\nUse the schema provided in the context block to determine appropriate classes, properties, and relationships.\n - Ensure queries follow SPARQL syntax and use prefixes correctly.\n - Generate queries that efficiently retrieve relevant data while optimizing performance.\n - If multiple valid queries exist, choose the most concise and efficient one.\n - Preserve the intent of the competency question while ensuring syntactic correctness.\n - Give only the SPARQL query and nothing else.\n - Only use RDF, RDFS, XSD, OWL, TIME for generic properties unless a specific namespace is provided. Dont't use external ones unless specified.\n"}, {"role": "user", "content": "\nTask:\nWrite a SPARQL query that answers the following competency question:\nWhat are all the geographical places associated with enslaved people and their relationships to those places?\n\nRequirements:\n- Use the schema to determine correct URIs and relationships.\n- Ensure the query retrieves the necessary information efficiently.\n- Provide the full SPARQL query without placeholders.\n\nContext:\nBelow is the schema of a knowledge graph:\nSubject,Predicate,Object\nwb:Item (Agent),hasName,xsd:string\nhasName,recordedAt,wd:Item (Event)\nhasName,nameStructure,wd:Item (NameStructure)\nhasName,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasSex,wd:Item (SexType)\nhasSex,recordedAt,wd:Item (Event)\nhasSex,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasOccupation,wd:Item (Occupation)\nhasOccupation,recordedAt,wd:Item (Event)\nhasOccupation,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasAgeCategory,wb:Item (AgeCategory)\nhasAgeCategory,hasAge,xsd:int\nhasAgeCategory,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasAge,xsd:int\nhasAge,hasAgeCategory,wb:Item (AgeCategory)\nhasAge,isDirectlyBasedOn,Reference\nwb:Item (Agent),participatesIn,wd:Item (Event)\nparticipatesIn,recordedAt,wd:Item (Event)\nparticipatesIn,hasTemporalExtent,wd:Item (TemporalExtent)\nparticipatesIn,isDirectlyBasedOn,Reference\nparticipatesIn,hasParticipationRoleType,wd:Item (ParticipationRoleCV)\nwb:Item (Agent),hasInterAgentRelationship,wd:Item (Agent)\nhasInterAgentRelationship,recordedAt,wd:Item (Event)\nhasInterAgentRelationship,isDirectlyBasedOn,Reference\nhasInterAgentRelationship,hasInterAgentRelationshipType,wd:Item (InterAgentRelationshipCV)\n\n"}], "temperature": 0.8}}
{"custom_id": "cq-5", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "\nYou are an expert in knowledge graphs and SPARQL query generation. Your task is to generate SPARQL queries based on provided competency questions and a given schema.\n\nGuidelines:\nUse the schema provided in the context block to determine appropriate classes, properties, and relationships.\n - Ensure queries follow SPARQL syntax and use prefixes correctly.\n - Generate queries that efficiently retrieve relevant data while optimizing performance.\n - If multiple valid queries exist, choose the most concise and efficient one.\n - Preserve the intent of the competency question while ensuring syntactic correctness.\n - Give only the SPARQL query and nothing else.\n - Only use RDF, RDFS, XSD, OWL, TIME for generic properties unless a specific namespace is provided. Dont't use external ones unless specified.\n"}, {"role": "user", "content": "\nTask:\nWrite a SPARQL query that answers the following competency question:\nWhat are all the common names of enslaved children during the Revolutionary War era?\n\nRequirements:\n- Use the schema to determine correct URIs and relationships.\n- Ensure the query retrieves the necessary information efficiently.\n- Provide the full SPARQL query without placeholders.\n\nContext:\nBelow is the schema of a knowledge graph:\nSubject,Predicate,Object\nwb:Item (Agent),hasName,xsd:string\nhasName,recordedAt,wd:Item (Event)\nhasName,nameStructure,wd:Item (NameStructure)\nhasName,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasSex,wd:Item (SexType)\nhasSex,recordedAt,wd:Item (Event)\nhasSex,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasOccupation,wd:Item (Occupation)\nhasOccupation,recordedAt,wd:Item (Event)\nhasOccupation,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasAgeCategory,wb:Item (AgeCategory)\nhasAgeCategory,hasAge,xsd:int\nhasAgeCategory,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasAge,xsd:int\nhasAge,hasAgeCategory,wb:Item (AgeCategory)\nhasAge,isDirectlyBasedOn,Reference\nwb:Item (Agent),participatesIn,wd:Item (Event)\nparticipatesIn,recordedAt,wd:Item (Event)\nparticipatesIn,hasTemporalExtent,wd:Item (TemporalExtent)\nparticipatesIn,isDirectlyBasedOn,Reference\nparticipatesIn,hasParticipationRoleType,wd:Item (ParticipationRoleCV)\nwb:Item (Agent),hasInterAgentRelationship,wd:Item (Agent)\nhasInterAgentRelationship,recordedAt,wd:Item (Event)\nhasInterAgentRelationship,isDirectlyBasedOn,Reference\nhasInterAgentRelationship,hasInterAgentRelationshipType,wd:Item (InterAgentRelationshipCV)\n\n"}], "temperature": 0.8}}
{"custom_id": "cq-6", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "\nYou are an expert in knowledge graphs and SPARQL query generation. Your task is to generate SPARQL queries based on provided competency questions and a given schema.\n\nGuidelines:\nUse the schema provided in the context block to determine appropriate classes, properties, and relationships.\n - Ensure queries follow SPARQL syntax and use prefixes correctly.\n - Generate queries that efficiently retrieve relevant data while optimizing performance.\n - If multiple valid queries exist, choose the most concise and efficient one.\n - Preserve the intent of the competency question while ensuring syntactic correctness.\n - Give only the SPARQL query and nothing else.\n - Only use RDF, RDFS, XSD, OWL, TIME for generic properties unless a specific namespace is provided. Dont't use external ones unless specified.\n"}, {"role": "user", "content": "\nTask:\nWrite a SPARQL query that answers the following competency question:\nWhat are all the enslaved individuals and who enslaved them, including locations?\n\nRequirements:\n- Use the schema to determine correct URIs and relationships.\n- Ensure the query retrieves the necessary information efficiently.\n- Provide the full SPARQL query without placeholders.\n\nContext:\nBelow is the schema of a knowledge graph:\nSubject,Predicate,Object\nwb:Item (Agent),hasName,xsd:string\nhasName,recordedAt,wd:Item (Event)\nhasName,nameStructure,wd:Item (NameStructure)\nhasName,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasSex,wd:Item (SexType)\nhasSex,recordedAt,wd:Item (Event)\nhasSex,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasOccupation,wd:Item (Occupation)\nhasOccupation,recordedAt,wd:Item (Event)\nhasOccupation,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasAgeCategory,wb:Item (AgeCategory)\nhasAgeCategory,hasAge,xsd:int\nhasAgeCategory,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasAge,xsd:int\nhasAge,hasAgeCategory,wb:Item (AgeCategory)\nhasAge,isDirectlyBasedOn,Reference\nwb:Item (Agent),participatesIn,wd:Item (Event)\nparticipatesIn,recordedAt,wd:Item (Event)\nparticipatesIn,hasTemporalExtent,wd:Item (TemporalExtent)\nparticipatesIn,isDirectlyBasedOn,Reference\nparticipatesIn,hasParticipationRoleType,wd:Item (ParticipationRoleCV)\nwb:Item (Agent),hasInterAgentRelationship,wd:Item (Agent)\nhasInterAgentRelationship,recordedAt,wd:Item (Event)\nhasInterAgentRelationship,isDirectlyBasedOn,Reference\nhasInterAgentRelationship,hasInterAgentRelationshipType,wd:Item (InterAgentRelationshipCV)\n\n"}], "temperature": 0.8}}
{"custom_id": "cq-7", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "\nYou are an expert in knowledge graphs and SPARQL query generation. Your task is to generate SPARQL queries based on provided competency questions and a given schema.\n\nGuidelines:\nUse the schema provided in the context block to determine appropriate classes, properties, and relationships.\n - Ensure queries follow SPARQL syntax and use prefixes correctly.\n - Generate queries that efficiently retrieve relevant data while optimizing performance.\n - If multiple valid queries exist, choose the most concise and efficient one.\n - Preserve the intent of the competency question while ensuring syntactic correctness.\n - Give only the SPARQL query and nothing else.\n - Only use RDF, RDFS, XSD, OWL, TIME for generic properties unless a specific namespace is provided. Dont't use external ones unless specified.\n"}, {"role": "user", "content": "\nTask:\nWrite a SPARQL query that answers the following competency question:\nWho are all the children associated with enslaved individuals?\n\nRequirements:\n- Use the schema to determine correct URIs and relationships.\n- Ensure the query retrieves the necessary information efficiently.\n- Provide the full SPARQL query without placeholders.\n\nContext:\nBelow is the schema of a knowledge graph:\nSubject,Predicate,Object\nwb:Item (Agent),hasName,xsd:string\nhasName,recordedAt,wd:Item (Event)\nhasName,nameStructure,wd:Item (NameStructure)\nhasName,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasSex,wd:Item (SexType)\nhasSex,recordedAt,wd:Item (Event)\nhasSex,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasOccupation,wd:Item (Occupation)\nhasOccupation,recordedAt,wd:Item (Event)\nhasOccupation,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasAgeCategory,wb:Item (AgeCategory)\nhasAgeCategory,hasAge,xsd:int\nhasAgeCategory,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasAge,xsd:int\nhasAge,hasAgeCategory,wb:Item (AgeCategory)\nhasAge,isDirectlyBasedOn,Reference\nwb:Item (Agent),participatesIn,wd:Item (Event)\nparticipatesIn,recordedAt,wd:Item (Event)\nparticipatesIn,hasTemporalExtent,wd:Item (TemporalExtent)\nparticipatesIn,isDirectlyBasedOn,Reference\nparticipatesIn,hasParticipationRoleType,wd:Item (ParticipationRoleCV)\nwb:Item (Agent),hasInterAgentRelationship,wd:Item (Agent)\nhasInterAgentRelationship,recordedAt,wd:Item (Event)\nhasInterAgentRelationship,isDirectlyBasedOn,Reference\nhasInterAgentRelationship,hasInterAgentRelationshipType,wd:Item (InterAgentRelationshipCV)\n\n"}], "temperature": 0.8}}
{"custom_id": "cq-8", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "\nYou are an expert in knowledge graphs and SPARQL query generation. Your task is to generate SPARQL queries based on provided competency questions and a given schema.\n\nGuidelines:\nUse the schema provided in the context block to determine appropriate classes, properties, and relationships.\n - Ensure queries follow SPARQL syntax and use prefixes correctly.\n - Generate queries that efficiently retrieve relevant data while optimizing performance.\n - If multiple valid queries exist, choose the most concise and efficient one.\n - Preserve the intent of the competency question while ensuring syntactic correctness.\n - Give only the SPARQL query and nothing else.\n - Only use RDF, RDFS, XSD, OWL, TIME for generic properties unless a specific namespace is provided. Dont't use external ones unless specified.\n"}, {"role": "user", "content": "\nTask:\nWrite a SPARQL query that answers the following competency question:\nWhat are all the available records about individuals identified as enslaved or formerly enslaved in specific locations and periods?\n\nRequirements:\n- Use the schema to determine correct URIs and relationships.\n- Ensure the query retrieves the necessary information efficiently.\n- Provide the full SPARQL query without placeholders.\n\nContext:\nBelow is the schema of a knowledge graph:\nSubject,Predicate,Object\nwb:Item (Agent),hasName,xsd:string\nhasName,recordedAt,wd:Item (Event)\nhasName,nameStructure,wd:Item (NameStructure)\nhasName,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasSex,wd:Item (SexType)\nhasSex,recordedAt,wd:Item (Event)\nhasSex,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasOccupation,wd:Item (Occupation)\nhasOccupation,recordedAt,wd:Item (Event)\nhasOccupation,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasAgeCategory,wb:Item (AgeCategory)\nhasAgeCategory,hasAge,xsd:int\nhasAgeCategory,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasAge,xsd:int\nhasAge,hasAgeCategory,wb:Item (AgeCategory)\nhasAge,isDirectlyBasedOn,Reference\nwb:Item (Agent),participatesIn,wd:Item (Event)\nparticipatesIn,recordedAt,wd:Item (Event)\nparticipatesIn,hasTemporalExtent,wd:Item (TemporalExtent)\nparticipatesIn,isDirectlyBasedOn,Reference\nparticipatesIn,hasParticipationRoleType,wd:Item (ParticipationRoleCV)\nwb:Item (Agent),hasInterAgentRelationship,wd:Item (Agent)\nhasInterAgentRelationship,recordedAt,wd:Item (Event)\nhasInterAgentRelationship,isDirectlyBasedOn,Reference\nhasInterAgentRelationship,hasInterAgentRelationshipType,wd:Item (InterAgentRelationshipCV)\n\n"}], "temperature": 0.8}}
{"custom_id": "cq-9", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "\nYou are an expert in knowledge graphs and SPARQL query generation. Your task is to generate SPARQL queries based on provided competency questions and a given schema.\n\nGuidelines:\nUse the schema provided in the context block to determine appropriate classes, properties, and relationships.\n - Ensure queries follow SPARQL syntax and use prefixes correctly.\n - Generate queries that efficiently retrieve relevant data while optimizing performance.\n - If multiple valid queries exist, choose the most concise and efficient one.\n - Preserve the intent of the competency question while ensuring syntactic correctness.\n - Give only the SPARQL query and nothing else.\n - Only use RDF, RDFS, XSD, OWL, TIME for generic properties unless a specific namespace is provided. Dont't use external ones unless specified.\n"}, {"role": "user", "content": "\nTask:\nWrite a SPARQL query that answers the following competency question:\nWhat are all the enslaved children recorded in specific locations and time periods?\n\nRequirements:\n- Use the schema to determine correct URIs and relationships.\n- Ensure the query retrieves the necessary information efficiently.\n- Provide the full SPARQL query without placeholders.\n\nContext:\nBelow is the schema of a knowledge graph:\nSubject,Predicate,Object\nwb:Item (Agent),hasName,xsd:string\nhasName,recordedAt,wd:Item (Event)\nhasName,nameStructure,wd:Item (NameStructure)\nhasName,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasSex,wd:Item (SexType)\nhasSex,recordedAt,wd:Item (Event)\nhasSex,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasOccupation,wd:Item (Occupation)\nhasOccupation,recordedAt,wd:Item (Event)\nhasOccupation,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasAgeCategory,wb:Item (AgeCategory)\nhasAgeCategory,hasAge,xsd:int\nhasAgeCategory,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasAge,xsd:int\nhasAge,hasAgeCategory,wb:Item (AgeCategory)\nhasAge,isDirectlyBasedOn,Reference\nwb:Item (Agent),participatesIn,wd:Item (Event)\nparticipatesIn,recordedAt,wd:Item (Event)\nparticipatesIn,hasTemporalExtent,wd:Item (TemporalExtent)\nparticipatesIn,isDirectlyBasedOn,Reference\nparticipatesIn,hasParticipationRoleType,wd:Item (ParticipationRoleCV)\nwb:Item (Agent),hasInterAgentRelationship,wd:Item (Agent)\nhasInterAgentRelationship,recordedAt,wd:Item (Event)\nhasInterAgentRelationship,isDirectlyBasedOn,Reference\nhasInterAgentRelationship,hasInterAgentRelationshipType,wd:Item (InterAgentRelationshipCV)\n\n"}], "temperature": 0.8}}
{"custom_id": "cq-10", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "\nYou are an expert in knowledge graphs and SPARQL query generation. Your task is to generate SPARQL queries based on provided competency questions and a given schema.\n\nGuidelines:\nUse the schema provided in the context block to determine appropriate classes, properties, and relationships.\n - Ensure queries follow SPARQL syntax and use prefixes correctly.\n - Generate queries that efficiently retrieve relevant data while optimizing performance.\n - If multiple valid queries exist, choose the most concise and efficient one.\n - Preserve the intent of the competency question while ensuring syntactic correctness.\n - Give only the SPARQL query and nothing else.\n - Only use RDF, RDFS, XSD, OWL, TIME for generic properties unless a specific namespace is provided. Dont't use external ones unless specified.\n"}, {"role": "user", "content": "\nTask:\nWrite a SPARQL query that answers the following competency question:\nWhat are all the enslaved people associated with a specific owner in a specific place and time, and how many were there?\n\nRequirements:\n- Use the schema to determine correct URIs and relationships.\n- Ensure the query retrieves the necessary information efficiently.\n- Provide the full SPARQL query without placeholders.\n\nContext:\nBelow is the schema of a knowledge graph:\nSubject,Predicate,Object\nwb:Item (Agent),hasName,xsd:string\nhasName,recordedAt,wd:Item (Event)\nhasName,nameStructure,wd:Item (NameStructure)\nhasName,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasSex,wd:Item (SexType)\nhasSex,recordedAt,wd:Item (Event)\nhasSex,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasOccupation,wd:Item (Occupation)\nhasOccupation,recordedAt,wd:Item (Event)\nhasOccupation,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasAgeCategory,wb:Item (AgeCategory)\nhasAgeCategory,hasAge,xsd:int\nhasAgeCategory,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasAge,xsd:int\nhasAge,hasAgeCategory,wb:Item (AgeCategory)\nhasAge,isDirectlyBasedOn,Reference\nwb:Item (Agent),participatesIn,wd:Item (Event)\nparticipatesIn,recordedAt,wd:Item (Event)\nparticipatesIn,hasTemporalExtent,wd:Item (TemporalExtent)\nparticipatesIn,isDirectlyBasedOn,Reference\nparticipatesIn,hasParticipationRoleType,wd:Item (ParticipationRoleCV)\nwb:Item (Agent),hasInterAgentRelationship,wd:Item (Agent)\nhasInterAgentRelationship,recordedAt,wd:Item (Event)\nhasInterAgentRelationship,isDirectlyBasedOn,Reference\nhasInterAgentRelationship,hasInterAgentRelationshipType,wd:Item (InterAgentRelationshipCV)\n\n"}], "temperature": 0.8}}
{"custom_id": "cq-11", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "\nYou are an expert in knowledge graphs and SPARQL query generation. Your task is to generate SPARQL queries based on provided competency questions and a given schema.\n\nGuidelines:\nUse the schema provided in the context block to determine appropriate classes, properties, and relationships.\n - Ensure queries follow SPARQL syntax and use prefixes correctly.\n - Generate queries that efficiently retrieve relevant data while optimizing performance.\n - If multiple valid queries exist, choose the most concise and efficient one.\n - Preserve the intent of the competency question while ensuring syntactic correctness.\n - Give only the SPARQL query and nothing else.\n - Only use RDF, RDFS, XSD, OWL, TIME for generic properties unless a specific namespace is provided. Dont't use external ones unless specified.\n"}, {"role": "user", "content": "\nTask:\nWrite a SPARQL query that answers the following competency question:\nWhat are all the enslaved individuals who contributed labor to construction projects, such as the state capitol, and what were their roles?\n\nRequirements:\n- Use the schema to determine correct URIs and relationships.\n- Ensure the query retrieves the necessary information efficiently.\n- Provide the full SPARQL query without placeholders.\n\nContext:\nBelow is the schema of a knowledge graph:\nSubject,Predicate,Object\nwb:Item (Agent),hasName,xsd:string\nhasName,recordedAt,wd:Item (Event)\nhasName,nameStructure,wd:Item (NameStructure)\nhasName,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasSex,wd:Item (SexType)\nhasSex,recordedAt,wd:Item (Event)\nhasSex,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasOccupation,wd:Item (Occupation)\nhasOccupation,recordedAt,wd:Item (Event)\nhasOccupation,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasAgeCategory,wb:Item (AgeCategory)\nhasAgeCategory,hasAge,xsd:int\nhasAgeCategory,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasAge,xsd:int\nhasAge,hasAgeCategory,wb:Item (AgeCategory)\nhasAge,isDirectlyBasedOn,Reference\nwb:Item (Agent),participatesIn,wd:Item (Event)\nparticipatesIn,recordedAt,wd:Item (Event)\nparticipatesIn,hasTemporalExtent,wd:Item (TemporalExtent)\nparticipatesIn,isDirectlyBasedOn,Reference\nparticipatesIn,hasParticipationRoleType,wd:Item (ParticipationRoleCV)\nwb:Item (Agent),hasInterAgentRelationship,wd:Item (Agent)\nhasInterAgentRelationship,recordedAt,wd:Item (Event)\nhasInterAgentRelationship,isDirectlyBasedOn,Reference\nhasInterAgentRelationship,hasInterAgentRelationshipType,wd:Item (InterAgentRelationshipCV)\n\n"}], "temperature": 0.8}}
{"custom_id": "cq-12", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "\nYou are an expert in knowledge graphs and SPARQL query generation. Your task is to generate SPARQL queries based on provided competency questions and a given schema.\n\nGuidelines:\nUse the schema provided in the context block to determine appropriate classes, properties, and relationships.\n - Ensure queries follow SPARQL syntax and use prefixes correctly.\n - Generate queries that efficiently retrieve relevant data while optimizing performance.\n - If multiple valid queries exist, choose the most concise and efficient one.\n - Preserve the intent of the competency question while ensuring syntactic correctness.\n - Give only the SPARQL query and nothing else.\n - Only use RDF, RDFS, XSD, OWL, TIME for generic properties unless a specific namespace is provided. Dont't use external ones unless specified.\n"}, {"role": "user", "content": "\nTask:\nWrite a SPARQL query that answers the following competency question:\nWhat are all the known addresses or properties that were inhabited by enslaved individuals?\n\nRequirements:\n- Use the schema to determine correct URIs and relationships.\n- Ensure the query retrieves the necessary information efficiently.\n- Provide the full SPARQL query without placeholders.\n\nContext:\nBelow is the schema of a knowledge graph:\nSubject,Predicate,Object\nwb:Item (Agent),hasName,xsd:string\nhasName,recordedAt,wd:Item (Event)\nhasName,nameStructure,wd:Item (NameStructure)\nhasName,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasSex,wd:Item (SexType)\nhasSex,recordedAt,wd:Item (Event)\nhasSex,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasOccupation,wd:Item (Occupation)\nhasOccupation,recordedAt,wd:Item (Event)\nhasOccupation,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasAgeCategory,wb:Item (AgeCategory)\nhasAgeCategory,hasAge,xsd:int\nhasAgeCategory,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasAge,xsd:int\nhasAge,hasAgeCategory,wb:Item (AgeCategory)\nhasAge,isDirectlyBasedOn,Reference\nwb:Item (Agent),participatesIn,wd:Item (Event)\nparticipatesIn,recordedAt,wd:Item (Event)\nparticipatesIn,hasTemporalExtent,wd:Item (TemporalExtent)\nparticipatesIn,isDirectlyBasedOn,Reference\nparticipatesIn,hasParticipationRoleType,wd:Item (ParticipationRoleCV)\nwb:Item (Agent),hasInterAgentRelationship,wd:Item (Agent)\nhasInterAgentRelationship,recordedAt,wd:Item (Event)\nhasInterAgentRelationship,isDirectlyBasedOn,Reference\nhasInterAgentRelationship,hasInterAgentRelationshipType,wd:Item (InterAgentRelationshipCV)\n\n"}], "temperature": 0.8}}
{"custom_id": "cq-13", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "\nYou are an expert in knowledge graphs and SPARQL query generation. Your task is to generate SPARQL queries based on provided competency questions and a given schema.\n\nGuidelines:\nUse the schema provided in the context block to determine appropriate classes, properties, and relationships.\n - Ensure queries follow SPARQL syntax and use prefixes correctly.\n - Generate queries that efficiently retrieve relevant data while optimizing performance.\n - If multiple valid queries exist, choose the most concise and efficient one.\n - Preserve the intent of the competency question while ensuring syntactic correctness.\n - Give only the SPARQL query and nothing else.\n - Only use RDF, RDFS, XSD, OWL, TIME for generic properties unless a specific namespace is provided. Dont't use external ones unless specified.\n"}, {"role": "user", "content": "\nTask:\nWrite a SPARQL query that answers the following competency question:\nWhat are all the enslaved individuals transported from specific ports and their demographic breakdowns over time?\n\nRequirements:\n- Use the schema to determine correct URIs and relationships.\n- Ensure the query retrieves the necessary information efficiently.\n- Provide the full SPARQL query without placeholders.\n\nContext:\nBelow is the schema of a knowledge graph:\nSubject,Predicate,Object\nwb:Item (Agent),hasName,xsd:string\nhasName,recordedAt,wd:Item (Event)\nhasName,nameStructure,wd:Item (NameStructure)\nhasName,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasSex,wd:Item (SexType)\nhasSex,recordedAt,wd:Item (Event)\nhasSex,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasOccupation,wd:Item (Occupation)\nhasOccupation,recordedAt,wd:Item (Event)\nhasOccupation,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasAgeCategory,wb:Item (AgeCategory)\nhasAgeCategory,hasAge,xsd:int\nhasAgeCategory,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasAge,xsd:int\nhasAge,hasAgeCategory,wb:Item (AgeCategory)\nhasAge,isDirectlyBasedOn,Reference\nwb:Item (Agent),participatesIn,wd:Item (Event)\nparticipatesIn,recordedAt,wd:Item (Event)\nparticipatesIn,hasTemporalExtent,wd:Item (TemporalExtent)\nparticipatesIn,isDirectlyBasedOn,Reference\nparticipatesIn,hasParticipationRoleType,wd:Item (ParticipationRoleCV)\nwb:Item (Agent),hasInterAgentRelationship,wd:Item (Agent)\nhasInterAgentRelationship,recordedAt,wd:Item (Event)\nhasInterAgentRelationship,isDirectlyBasedOn,Reference\nhasInterAgentRelationship,hasInterAgentRelationshipType,wd:Item (InterAgentRelationshipCV)\n\n"}], "temperature": 0.8}}
{"custom_id": "cq-14", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "\nYou are an expert in knowledge graphs and SPARQL query generation. Your task is to generate SPARQL queries based on provided competency questions and a given schema.\n\nGuidelines:\nUse the schema provided in the context block to determine appropriate classes, properties, and relationships.\n - Ensure queries follow SPARQL syntax and use prefixes correctly.\n - Generate queries that efficiently retrieve relevant data while optimizing performance.\n - If multiple valid queries exist, choose the most concise and efficient one.\n - Preserve the intent of the competency question while ensuring syntactic correctness.\n - Give only the SPARQL query and nothing else.\n - Only use RDF, RDFS, XSD, OWL, TIME for generic properties unless a specific namespace is provided. Dont't use external ones unless specified.\n"}, {"role": "user", "content": "\nTask:\nWrite a SPARQL query that answers the following competency question:\nWhat are all the known slave rebellions, their participants, locations, and dates?\n\nRequirements:\n- Use the schema to determine correct URIs and relationships.\n- Ensure the query retrieves the necessary information efficiently.\n- Provide the full SPARQL query without placeholders.\n\nContext:\nBelow is the schema of a knowledge graph:\nSubject,Predicate,Object\nwb:Item (Agent),hasName,xsd:string\nhasName,recordedAt,wd:Item (Event)\nhasName,nameStructure,wd:Item (NameStructure)\nhasName,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasSex,wd:Item (SexType)\nhasSex,recordedAt,wd:Item (Event)\nhasSex,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasOccupation,wd:Item (Occupation)\nhasOccupation,recordedAt,wd:Item (Event)\nhasOccupation,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasAgeCategory,wb:Item (AgeCategory)\nhasAgeCategory,hasAge,xsd:int\nhasAgeCategory,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasAge,xsd:int\nhasAge,hasAgeCategory,wb:Item (AgeCategory)\nhasAge,isDirectlyBasedOn,Reference\nwb:Item (Agent),participatesIn,wd:Item (Event)\nparticipatesIn,recordedAt,wd:Item (Event)\nparticipatesIn,hasTemporalExtent,wd:Item (TemporalExtent)\nparticipatesIn,isDirectlyBasedOn,Reference\nparticipatesIn,hasParticipationRoleType,wd:Item (ParticipationRoleCV)\nwb:Item (Agent),hasInterAgentRelationship,wd:Item (Agent)\nhasInterAgentRelationship,recordedAt,wd:Item (Event)\nhasInterAgentRelationship,isDirectlyBasedOn,Reference\nhasInterAgentRelationship,hasInterAgentRelationshipType,wd:Item (InterAgentRelationshipCV)\n\n"}], "temperature": 0.8}}
{"custom_id": "cq-15", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "\nYou are an expert in knowledge graphs and SPARQL query generation. Your task is to generate SPARQL queries based on provided competency questions and a given schema.\n\nGuidelines:\nUse the schema provided in the context block to determine appropriate classes, properties, and relationships.\n - Ensure queries follow SPARQL syntax and use prefixes correctly.\n - Generate queries that efficiently retrieve relevant data while optimizing performance.\n - If multiple valid queries exist, choose the most concise and efficient one.\n - Preserve the intent of the competency question while ensuring syntactic correctness.\n - Give only the SPARQL query and nothing else.\n - Only use RDF, RDFS, XSD, OWL, TIME for generic properties unless a specific namespace is provided. Dont't use external ones unless specified.\n"}, {"role": "user", "content": "\nTask:\nWrite a SPARQL query that answers the following competency question:\nWhat are all the known relatives of enslaved individuals, including their relationships and locations?\n\nRequirements:\n- Use the schema to determine correct URIs and relationships.\n- Ensure the query retrieves the necessary information efficiently.\n- Provide the full SPARQL query without placeholders.\n\nContext:\nBelow is the schema of a knowledge graph:\nSubject,Predicate,Object\nwb:Item (Agent),hasName,xsd:string\nhasName,recordedAt,wd:Item (Event)\nhasName,nameStructure,wd:Item (NameStructure)\nhasName,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasSex,wd:Item (SexType)\nhasSex,recordedAt,wd:Item (Event)\nhasSex,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasOccupation,wd:Item (Occupation)\nhasOccupation,recordedAt,wd:Item (Event)\nhasOccupation,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasAgeCategory,wb:Item (AgeCategory)\nhasAgeCategory,hasAge,xsd:int\nhasAgeCategory,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasAge,xsd:int\nhasAge,hasAgeCategory,wb:Item (AgeCategory)\nhasAge,isDirectlyBasedOn,Reference\nwb:Item (Agent),participatesIn,wd:Item (Event)\nparticipatesIn,recordedAt,wd:Item (Event)\nparticipatesIn,hasTemporalExtent,wd:Item (TemporalExtent)\nparticipatesIn,isDirectlyBasedOn,Reference\nparticipatesIn,hasParticipationRoleType,wd:Item (ParticipationRoleCV)\nwb:Item (Agent),hasInterAgentRelationship,wd:Item (Agent)\nhasInterAgentRelationship,recordedAt,wd:Item (Event)\nhasInterAgentRelationship,isDirectlyBasedOn,Reference\nhasInterAgentRelationship,hasInterAgentRelationshipType,wd:Item (InterAgentRelationshipCV)\n\n"}], "temperature": 0.8}}
{"custom_id": "cq-16", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "\nYou are an expert in knowledge graphs and SPARQL query generation. Your task is to generate SPARQL queries based on provided competency questions and a given schema.\n\nGuidelines:\nUse the schema provided in the context block to determine appropriate classes, properties, and relationships.\n - Ensure queries follow SPARQL syntax and use prefixes correctly.\n - Generate queries that efficiently retrieve relevant data while optimizing performance.\n - If multiple valid queries exist, choose the most concise and efficient one.\n - Preserve the intent of the competency question while ensuring syntactic correctness.\n - Give only the SPARQL query and nothing else.\n - Only use RDF, RDFS, XSD, OWL, TIME for generic properties unless a specific namespace is provided. Dont't use external ones unless specified.\n"}, {"role": "user", "content": "\nTask:\nWrite a SPARQL query that answers the following competency question:\nWhat are all the median ages of enslaved individuals who escaped in location X during time period X?\n\nRequirements:\n- Use the schema to determine correct URIs and relationships.\n- Ensure the query retrieves the necessary information efficiently.\n- Provide the full SPARQL query without placeholders.\n\nContext:\nBelow is the schema of a knowledge graph:\nSubject,Predicate,Object\nwb:Item (Agent),hasName,xsd:string\nhasName,recordedAt,wd:Item (Event)\nhasName,nameStructure,wd:Item (NameStructure)\nhasName,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasSex,wd:Item (SexType)\nhasSex,recordedAt,wd:Item (Event)\nhasSex,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasOccupation,wd:Item (Occupation)\nhasOccupation,recordedAt,wd:Item (Event)\nhasOccupation,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasAgeCategory,wb:Item (AgeCategory)\nhasAgeCategory,hasAge,xsd:int\nhasAgeCategory,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasAge,xsd:int\nhasAge,hasAgeCategory,wb:Item (AgeCategory)\nhasAge,isDirectlyBasedOn,Reference\nwb:Item (Agent),participatesIn,wd:Item (Event)\nparticipatesIn,recordedAt,wd:Item (Event)\nparticipatesIn,hasTemporalExtent,wd:Item (TemporalExtent)\nparticipatesIn,isDirectlyBasedOn,Reference\nparticipatesIn,hasParticipationRoleType,wd:Item (ParticipationRoleCV)\nwb:Item (Agent),hasInterAgentRelationship,wd:Item (Agent)\nhasInterAgentRelationship,recordedAt,wd:Item (Event)\nhasInterAgentRelationship,isDirectlyBasedOn,Reference\nhasInterAgentRelationship,hasInterAgentRelationshipType,wd:Item (InterAgentRelationshipCV)\n\n"}], "temperature": 0.8}}
{"custom_id": "cq-17", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "\nYou are an expert in knowledge graphs and SPARQL query generation. Your task is to generate SPARQL queries based on provided competency questions and a given schema.\n\nGuidelines:\nUse the schema provided in the context block to determine appropriate classes, properties, and relationships.\n - Ensure queries follow SPARQL syntax and use prefixes correctly.\n - Generate queries that efficiently retrieve relevant data while optimizing performance.\n - If multiple valid queries exist, choose the most concise and efficient one.\n - Preserve the intent of the competency question while ensuring syntactic correctness.\n - Give only the SPARQL query and nothing else.\n - Only use RDF, RDFS, XSD, OWL, TIME for generic properties unless a specific namespace is provided. Dont't use external ones unless specified.\n"}, {"role": "user", "content": "\nTask:\nWrite a SPARQL query that answers the following competency question:\nWhat are all the average ages at death of enslaved individuals?\n\nRequirements:\n- Use the schema to determine correct URIs and relationships.\n- Ensure the query retrieves the necessary information efficiently.\n- Provide the full SPARQL query without placeholders.\n\nContext:\nBelow is the schema of a knowledge graph:\nSubject,Predicate,Object\nwb:Item (Agent),hasName,xsd:string\nhasName,recordedAt,wd:Item (Event)\nhasName,nameStructure,wd:Item (NameStructure)\nhasName,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasSex,wd:Item (SexType)\nhasSex,recordedAt,wd:Item (Event)\nhasSex,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasOccupation,wd:Item (Occupation)\nhasOccupation,recordedAt,wd:Item (Event)\nhasOccupation,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasAgeCategory,wb:Item (AgeCategory)\nhasAgeCategory,hasAge,xsd:int\nhasAgeCategory,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasAge,xsd:int\nhasAge,hasAgeCategory,wb:Item (AgeCategory)\nhasAge,isDirectlyBasedOn,Reference\nwb:Item (Agent),participatesIn,wd:Item (Event)\nparticipatesIn,recordedAt,wd:Item (Event)\nparticipatesIn,hasTemporalExtent,wd:Item (TemporalExtent)\nparticipatesIn,isDirectlyBasedOn,Reference\nparticipatesIn,hasParticipationRoleType,wd:Item (ParticipationRoleCV)\nwb:Item (Agent),hasInterAgentRelationship,wd:Item (Agent)\nhasInterAgentRelationship,recordedAt,wd:Item (Event)\nhasInterAgentRelationship,isDirectlyBasedOn,Reference\nhasInterAgentRelationship,hasInterAgentRelationshipType,wd:Item (InterAgentRelationshipCV)\n\n"}], "temperature": 0.8}}
{"custom_id": "cq-18", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "\nYou are an expert in knowledge graphs and SPARQL query generation. Your task is to generate SPARQL queries based on provided competency questions and a given schema.\n\nGuidelines:\nUse the schema provided in the context block to determine appropriate classes, properties, and relationships.\n - Ensure queries follow SPARQL syntax and use prefixes correctly.\n - Generate queries that efficiently retrieve relevant data while optimizing performance.\n - If multiple valid queries exist, choose the most concise and efficient one.\n - Preserve the intent of the competency question while ensuring syntactic correctness.\n - Give only the SPARQL query and nothing else.\n - Only use RDF, RDFS, XSD, OWL, TIME for generic properties unless a specific namespace is provided. Dont't use external ones unless specified.\n"}, {"role": "user", "content": "\nTask:\nWrite a SPARQL query that answers the following competency question:\nWhat are all the documented skill categories associated with enslaved individuals, broken down by ethnic group, and their percentages?\n\nRequirements:\n- Use the schema to determine correct URIs and relationships.\n- Ensure the query retrieves the necessary information efficiently.\n- Provide the full SPARQL query without placeholders.\n\nContext:\nBelow is the schema of a knowledge graph:\nSubject,Predicate,Object\nwb:Item (Agent),hasName,xsd:string\nhasName,recordedAt,wd:Item (Event)\nhasName,nameStructure,wd:Item (NameStructure)\nhasName,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasSex,wd:Item (SexType)\nhasSex,recordedAt,wd:Item (Event)\nhasSex,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasOccupation,wd:Item (Occupation)\nhasOccupation,recordedAt,wd:Item (Event)\nhasOccupation,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasAgeCategory,wb:Item (AgeCategory)\nhasAgeCategory,hasAge,xsd:int\nhasAgeCategory,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasAge,xsd:int\nhasAge,hasAgeCategory,wb:Item (AgeCategory)\nhasAge,isDirectlyBasedOn,Reference\nwb:Item (Agent),participatesIn,wd:Item (Event)\nparticipatesIn,recordedAt,wd:Item (Event)\nparticipatesIn,hasTemporalExtent,wd:Item (TemporalExtent)\nparticipatesIn,isDirectlyBasedOn,Reference\nparticipatesIn,hasParticipationRoleType,wd:Item (ParticipationRoleCV)\nwb:Item (Agent),hasInterAgentRelationship,wd:Item (Agent)\nhasInterAgentRelationship,recordedAt,wd:Item (Event)\nhasInterAgentRelationship,isDirectlyBasedOn,Reference\nhasInterAgentRelationship,hasInterAgentRelationshipType,wd:Item (InterAgentRelationshipCV)\n\n"}], "temperature": 0.8}}
{"custom_id": "cq-19", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "\nYou are an expert in knowledge graphs and SPARQL query generation. Your task is to generate SPARQL queries based on provided competency questions and a given schema.\n\nGuidelines:\nUse the schema provided in the context block to determine appropriate classes, properties, and relationships.\n - Ensure queries follow SPARQL syntax and use prefixes correctly.\n - Generate queries that efficiently retrieve relevant data while optimizing performance.\n - If multiple valid queries exist, choose the most concise and efficient one.\n - Preserve the intent of the competency question while ensuring syntactic correctness.\n - Give only the SPARQL query and nothing else.\n - Only use RDF, RDFS, XSD, OWL, TIME for generic properties unless a specific namespace is provided. Dont't use external ones unless specified.\n"}, {"role": "user", "content": "\nTask:\nWrite a SPARQL query that answers the following competency question:\nWhat are all the recorded marriage events between enslaved individuals, categorized by same or different ethnic groupings, and their percentages?\n\nRequirements:\n- Use the schema to determine correct URIs and relationships.\n- Ensure the query retrieves the necessary information efficiently.\n- Provide the full SPARQL query without placeholders.\n\nContext:\nBelow is the schema of a knowledge graph:\nSubject,Predicate,Object\nwb:Item (Agent),hasName,xsd:string\nhasName,recordedAt,wd:Item (Event)\nhasName,nameStructure,wd:Item (NameStructure)\nhasName,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasSex,wd:Item (SexType)\nhasSex,recordedAt,wd:Item (Event)\nhasSex,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasOccupation,wd:Item (Occupation)\nhasOccupation,recordedAt,wd:Item (Event)\nhasOccupation,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasAgeCategory,wb:Item (AgeCategory)\nhasAgeCategory,hasAge,xsd:int\nhasAgeCategory,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasAge,xsd:int\nhasAge,hasAgeCategory,wb:Item (AgeCategory)\nhasAge,isDirectlyBasedOn,Reference\nwb:Item (Agent),participatesIn,wd:Item (Event)\nparticipatesIn,recordedAt,wd:Item (Event)\nparticipatesIn,hasTemporalExtent,wd:Item (TemporalExtent)\nparticipatesIn,isDirectlyBasedOn,Reference\nparticipatesIn,hasParticipationRoleType,wd:Item (ParticipationRoleCV)\nwb:Item (Agent),hasInterAgentRelationship,wd:Item (Agent)\nhasInterAgentRelationship,recordedAt,wd:Item (Event)\nhasInterAgentRelationship,isDirectlyBasedOn,Reference\nhasInterAgentRelationship,hasInterAgentRelationshipType,wd:Item (InterAgentRelationshipCV)\n\n"}], "temperature": 0.8}}
{"custom_id": "cq-20", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "\nYou are an expert in knowledge graphs and SPARQL query generation. Your task is to generate SPARQL queries based on provided competency questions and a given schema.\n\nGuidelines:\nUse the schema provided in the context block to determine appropriate classes, properties, and relationships.\n - Ensure queries follow SPARQL syntax and use prefixes correctly.\n - Generate queries that efficiently retrieve relevant data while optimizing performance.\n - If multiple valid queries exist, choose the most concise and efficient one.\n - Preserve the intent of the competency question while ensuring syntactic correctness.\n - Give only the SPARQL query and nothing else.\n - Only use RDF, RDFS, XSD, OWL, TIME for generic properties unless a specific namespace is provided. Dont't use external ones unless specified.\n"}, {"role": "user", "content": "\nTask:\nWrite a SPARQL query that answers the following competency question:\nWhat are all the known economic values assigned to enslaved individuals, categorized by ethnicity, skills, gender, and period?\n\nRequirements:\n- Use the schema to determine correct URIs and relationships.\n- Ensure the query retrieves the necessary information efficiently.\n- Provide the full SPARQL query without placeholders.\n\nContext:\nBelow is the schema of a knowledge graph:\nSubject,Predicate,Object\nwb:Item (Agent),hasName,xsd:string\nhasName,recordedAt,wd:Item (Event)\nhasName,nameStructure,wd:Item (NameStructure)\nhasName,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasSex,wd:Item (SexType)\nhasSex,recordedAt,wd:Item (Event)\nhasSex,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasOccupation,wd:Item (Occupation)\nhasOccupation,recordedAt,wd:Item (Event)\nhasOccupation,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasAgeCategory,wb:Item (AgeCategory)\nhasAgeCategory,hasAge,xsd:int\nhasAgeCategory,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasAge,xsd:int\nhasAge,hasAgeCategory,wb:Item (AgeCategory)\nhasAge,isDirectlyBasedOn,Reference\nwb:Item (Agent),participatesIn,wd:Item (Event)\nparticipatesIn,recordedAt,wd:Item (Event)\nparticipatesIn,hasTemporalExtent,wd:Item (TemporalExtent)\nparticipatesIn,isDirectlyBasedOn,Reference\nparticipatesIn,hasParticipationRoleType,wd:Item (ParticipationRoleCV)\nwb:Item (Agent),hasInterAgentRelationship,wd:Item (Agent)\nhasInterAgentRelationship,recordedAt,wd:Item (Event)\nhasInterAgentRelationship,isDirectlyBasedOn,Reference\nhasInterAgentRelationship,hasInterAgentRelationshipType,wd:Item (InterAgentRelationshipCV)\n\n"}], "temperature": 0.8}}
{"custom_id": "cq-21", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "\nYou are an expert in knowledge graphs and SPARQL query generation. Your task is to generate SPARQL queries based on provided competency questions and a given schema.\n\nGuidelines:\nUse the schema provided in the context block to determine appropriate classes, properties, and relationships.\n - Ensure queries follow SPARQL syntax and use prefixes correctly.\n - Generate queries that efficiently retrieve relevant data while optimizing performance.\n - If multiple valid queries exist, choose the most concise and efficient one.\n - Preserve the intent of the competency question while ensuring syntactic correctness.\n - Give only the SPARQL query and nothing else.\n - Only use RDF, RDFS, XSD, OWL, TIME for generic properties unless a specific namespace is provided. Dont't use external ones unless specified.\n"}, {"role": "user", "content": "\nTask:\nWrite a SPARQL query that answers the following competency question:\nWhat are all the life outcomes (e.g., sale, manumission, death) of enslaved individuals disembarked from ship XXX?\n\nRequirements:\n- Use the schema to determine correct URIs and relationships.\n- Ensure the query retrieves the necessary information efficiently.\n- Provide the full SPARQL query without placeholders.\n\nContext:\nBelow is the schema of a knowledge graph:\nSubject,Predicate,Object\nwb:Item (Agent),hasName,xsd:string\nhasName,recordedAt,wd:Item (Event)\nhasName,nameStructure,wd:Item (NameStructure)\nhasName,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasSex,wd:Item (SexType)\nhasSex,recordedAt,wd:Item (Event)\nhasSex,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasOccupation,wd:Item (Occupation)\nhasOccupation,recordedAt,wd:Item (Event)\nhasOccupation,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasAgeCategory,wb:Item (AgeCategory)\nhasAgeCategory,hasAge,xsd:int\nhasAgeCategory,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasAge,xsd:int\nhasAge,hasAgeCategory,wb:Item (AgeCategory)\nhasAge,isDirectlyBasedOn,Reference\nwb:Item (Agent),participatesIn,wd:Item (Event)\nparticipatesIn,recordedAt,wd:Item (Event)\nparticipatesIn,hasTemporalExtent,wd:Item (TemporalExtent)\nparticipatesIn,isDirectlyBasedOn,Reference\nparticipatesIn,hasParticipationRoleType,wd:Item (ParticipationRoleCV)\nwb:Item (Agent),hasInterAgentRelationship,wd:Item (Agent)\nhasInterAgentRelationship,recordedAt,wd:Item (Event)\nhasInterAgentRelationship,isDirectlyBasedOn,Reference\nhasInterAgentRelationship,hasInterAgentRelationshipType,wd:Item (InterAgentRelationshipCV)\n\n"}], "temperature": 0.8}}
{"custom_id": "cq-22", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "\nYou are an expert in knowledge graphs and SPARQL query generation. Your task is to generate SPARQL queries based on provided competency questions and a given schema.\n\nGuidelines:\nUse the schema provided in the context block to determine appropriate classes, properties, and relationships.\n - Ensure queries follow SPARQL syntax and use prefixes correctly.\n - Generate queries that efficiently retrieve relevant data while optimizing performance.\n - If multiple valid queries exist, choose the most concise and efficient one.\n - Preserve the intent of the competency question while ensuring syntactic correctness.\n - Give only the SPARQL query and nothing else.\n - Only use RDF, RDFS, XSD, OWL, TIME for generic properties unless a specific namespace is provided. Dont't use external ones unless specified.\n"}, {"role": "user", "content": "\nTask:\nWrite a SPARQL query that answers the following competency question:\nWhat are all the enslaved individuals who lived in location X in the time period XXX?\n\nRequirements:\n- Use the schema to determine correct URIs and relationships.\n- Ensure the query retrieves the necessary information efficiently.\n- Provide the full SPARQL query without placeholders.\n\nContext:\nBelow is the schema of a knowledge graph:\nSubject,Predicate,Object\nwb:Item (Agent),hasName,xsd:string\nhasName,recordedAt,wd:Item (Event)\nhasName,nameStructure,wd:Item (NameStructure)\nhasName,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasSex,wd:Item (SexType)\nhasSex,recordedAt,wd:Item (Event)\nhasSex,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasOccupation,wd:Item (Occupation)\nhasOccupation,recordedAt,wd:Item (Event)\nhasOccupation,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasAgeCategory,wb:Item (AgeCategory)\nhasAgeCategory,hasAge,xsd:int\nhasAgeCategory,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasAge,xsd:int\nhasAge,hasAgeCategory,wb:Item (AgeCategory)\nhasAge,isDirectlyBasedOn,Reference\nwb:Item (Agent),participatesIn,wd:Item (Event)\nparticipatesIn,recordedAt,wd:Item (Event)\nparticipatesIn,hasTemporalExtent,wd:Item (TemporalExtent)\nparticipatesIn,isDirectlyBasedOn,Reference\nparticipatesIn,hasParticipationRoleType,wd:Item (ParticipationRoleCV)\nwb:Item (Agent),hasInterAgentRelationship,wd:Item (Agent)\nhasInterAgentRelationship,recordedAt,wd:Item (Event)\nhasInterAgentRelationship,isDirectlyBasedOn,Reference\nhasInterAgentRelationship,hasInterAgentRelationshipType,wd:Item (InterAgentRelationshipCV)\n\n"}], "temperature": 0.8}}
{"custom_id": "cq-23", "method": "POST", "url": "/v1/chat/completions", "body": {"model": "gpt-4o", "messages": [{"role": "system", "content": "\nYou are an expert in knowledge graphs and SPARQL query generation. Your task is to generate SPARQL queries based on provided competency questions and a given schema.\n\nGuidelines:\nUse the schema provided in the context block to determine appropriate classes, properties, and relationships.\n - Ensure queries follow SPARQL syntax and use prefixes correctly.\n - Generate queries that efficiently retrieve relevant data while optimizing performance.\n - If multiple valid queries exist, choose the most concise and efficient one.\n - Preserve the intent of the competency question while ensuring syntactic correctness.\n - Give only the SPARQL query and nothing else.\n - Only use RDF, RDFS, XSD, OWL, TIME for generic properties unless a specific namespace is provided. Dont't use external ones unless specified.\n"}, {"role": "user", "content": "\nTask:\nWrite a SPARQL query that answers the following competency question:\nWhat are all the enslaved individuals who were later recorded as slave owners, including details of their ownership activities?\n\nRequirements:\n- Use the schema to determine correct URIs and relationships.\n- Ensure the query retrieves the necessary information efficiently.\n- Provide the full SPARQL query without placeholders.\n\nContext:\nBelow is the schema of a knowledge graph:\nSubject,Predicate,Object\nwb:Item (Agent),hasName,xsd:string\nhasName,recordedAt,wd:Item (Event)\nhasName,nameStructure,wd:Item (NameStructure)\nhasName,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasSex,wd:Item (SexType)\nhasSex,recordedAt,wd:Item (Event)\nhasSex,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasOccupation,wd:Item (Occupation)\nhasOccupation,recordedAt,wd:Item (Event)\nhasOccupation,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasAgeCategory,wb:Item (AgeCategory)\nhasAgeCategory,hasAge,xsd:int\nhasAgeCategory,isDirectlyBasedOn,Reference\nwb:Item (Agent),hasAge,xsd:int\nhasAge,hasAgeCategory,wb:Item (AgeCategory)\nhasAge,isDirectlyBasedOn,Reference\nwb:Item (Agent),participatesIn,wd:Item (Event)\nparticipatesIn,recordedAt,wd:Item (Event)\nparticipatesIn,hasTemporalExtent,wd:Item (TemporalExtent)\nparticipatesIn,isDirectlyBasedOn,Reference\nparticipatesIn,hasParticipationRoleType,wd:Item (ParticipationRoleCV)\nwb:Item (Agent),hasInterAgentRelationship,wd:Item (Agent)\nhasInterAgentRelationship,recordedAt,wd:Item (Event)\nhasInterAgentRelationship,isDirectlyBasedOn,Reference\nhasInterAgentRelationship,hasInterAgentRelationshipType,wd:Item (InterAgentRelationshipCV)\n\n"}], "temperature": 0.8}}
